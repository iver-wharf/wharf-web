import { stringify } from "@angular/compiler/src/util";

export class ProblemResponse {
  /**
   * Detail is a human-readable explanation specific to this occurrence of the
   * problem.  Recommended to have proper punctuation, and be capitalized, like
   * a sentence. Compared to Title this field may stretch on and be longer.
   */
  detail?: string;
  /**
   * Error is an extended field for the regular Problem model defined in
   * RFC-7807. It contains the string message of the error (if any).
   */
  errors?: Array<string>;
  /**
   * Instance is a URI reference that identifies the specific occurrence of the
   * problem. It may or may not yield further information if dereferenced.
   */
  instance?: string;
  /**
   * Status is the HTTP status code generated by the origin server for this
   * occurrence of the problem.
   */
  status?: number;
  /**
   * Title is a short, human-readable summary of the problem type. It SHOULD
   * NOT change from occurrence to ocurrence of the problem, except for purposes
   * of localization.  Recommended to be kept brief, have proper punctuation,
   * and be capitalized, like a short sentence.
   */
  title?: string;
  /**
   * Type is a URI reference that identifies the problem type. The IETF RFC-7807
   * specification encourages that, when dereferenced, it provide human-readable
   * documentation for the problem type (e.g., using HTML). When this member is
   * not present, its value is assumed to be \"about:blank\".
   */
  type?: string;

  constructor(
    detail?: string,
    errors?: Array<string>,
    instance?: string,
    status?: number,
    title?: string,
    type?: string) {
    this.detail = detail;
    this.errors = errors;
    this.instance = instance;
    this.status = status;
    this.title = title;
    this.type = type;
  }

  static make(error: any): ProblemResponse {
    const { detail, errors, instance, status, title, type } = error;
    return new ProblemResponse(
      detail, errors, instance, status, title, type
    );
  }
}
